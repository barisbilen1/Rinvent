[{"path":"https://mkparkin.github.io/Rinvent/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Koray Parkin. Maintainer.","code":""},{"path":"https://mkparkin.github.io/Rinvent/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koray (2023). Rinvent: Useful simple functions R work cloud, simple functions. R package version 1.0.2, https://github.com/mkparkin/Rinvent/.","code":"@Manual{,   title = {Rinvent: Useful simple functions for R to work with cloud, simple functions},   author = {{Koray}},   year = {2023},   note = {R package version 1.0.2},   url = {https://github.com/mkparkin/Rinvent/}, }"},{"path":[]},{"path":"https://mkparkin.github.io/Rinvent/index.html","id":"intro-page","dir":"","previous_headings":"","what":"Intro Page","title":"Useful simple functions for R to work with cloud, simple functions","text":"https://mkparkin.github.io/Rinvent/","code":""},{"path":"https://mkparkin.github.io/Rinvent/index.html","id":"first-time-install","dir":"","previous_headings":"","what":"First Time Install","title":"Useful simple functions for R to work with cloud, simple functions","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"mkparkin/Rinvent\",upgrade=\"never\")"},{"path":[]},{"path":"https://mkparkin.github.io/Rinvent/index.html","id":"readparquetr","dir":"","previous_headings":"","what":"readparquetR","title":"Useful simple functions for R to work with cloud, simple functions","text":"Objective read parquet delta files R. Location file can local, aws s3 azure blob useful parameters filter data reading ","code":"# read parquet from local with where condition in the partition readparquetR(pathtoread=\"C:/users/...\", add_part_names=F, sample=F, where=\"sku=1 & store=1\", partition=\"2022\")  #read local delta files readparquetR(pathtoread=\"C:/users/...\", format=\"delta\")  your_connection = AzureStor::storage_container(AzureStor::storage_endpoint(your_link, key=your_key), \"your_container\")  readparquetR(pathtoread=\"blobpath/subdirectory/\", filelocation = \"azure\", format=\"delta\", containerconnection = your_connection)"},{"path":"https://mkparkin.github.io/Rinvent/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Useful simple functions for R to work with cloud, simple functions","text":"Checklist MR clone repo Increase version number DESCRIPTION Add NEWS.md release notes documentation, can use “devtools::document()” Run devtools::build_readme() update README.md pkgdown::build_site() website update","code":""},{"path":[]},{"path":"https://mkparkin.github.io/Rinvent/reference/exampleDataR.html","id":null,"dir":"Reference","previous_headings":"","what":"Sales data for two locations — exampleDataR","title":"Sales data for two locations — exampleDataR","text":"location, item, date level sales data","code":""},{"path":"https://mkparkin.github.io/Rinvent/reference/exampleDataR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sales data for two locations — exampleDataR","text":"","code":"exampleDataR"},{"path":"https://mkparkin.github.io/Rinvent/reference/exampleDataR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sales data for two locations — exampleDataR","text":"data frame 60 rows 4 columns, 2 location 2 item: location city location, istanbul ankara item sales two items, coffee tea date sales dates. 30 days sales random sales figures 0 40","code":""},{"path":"https://mkparkin.github.io/Rinvent/reference/exampleDataR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sales data for two locations — exampleDataR","text":"https://github.com/mkparkin/Rinvent","code":""},{"path":"https://mkparkin.github.io/Rinvent/reference/readparquetR.html","id":null,"dir":"Reference","previous_headings":"","what":"reading parquet or delta files from local directory or aws s3 or azure blob — readparquetR","title":"reading parquet or delta files from local directory or aws s3 or azure blob — readparquetR","text":"reads parquet,delta files local cloud","code":""},{"path":"https://mkparkin.github.io/Rinvent/reference/readparquetR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reading parquet or delta files from local directory or aws s3 or azure blob — readparquetR","text":"","code":"readparquetR(   pathtoread,   where = \"\",   partition = \"\",   collist = \"\",   sample = F,   samplesizecount = 3,   add_part_names = F,   format = \"parquet\",   filelocation = \"local\",   containerconnection = NULL,   bucket = NULL )"},{"path":"https://mkparkin.github.io/Rinvent/reference/readparquetR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reading parquet or delta files from local directory or aws s3 or azure blob — readparquetR","text":"pathtoread reading path, local azure cloud read datatable filter condition. .e. can write =\"column=''\" partition want read partition files pattern. .e. partition=c('2017','2018') collist specific columns read sample sample=T just see sample rows. dont read whole table samplesizecount default=3 rows. can change add_part_names partitioned, need make T add partition names column filelocation \"local\" \"azure\" \"s3\" containerconnection filelocation=\"azure\" need connection name bucket filelocation=\"s3\" need put bucket name","code":""},{"path":"https://mkparkin.github.io/Rinvent/reference/readparquetR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reading parquet or delta files from local directory or aws s3 or azure blob — readparquetR","text":"","code":"readparquetR(pathtoread=\"localfolder/\", collist = c(\"column1\",\"column2\",\"column3\"),format=\"delta\",where=\"SKU==19058901 & STORE!='1905'\") #> [1] \"localfolder/\" #> [1] \"there is no row, make sure path is correct!\" #> Error in .checkTypos(e, names_x): Object 'x' not found amongst  readparquetR(pathtoread=\"C:/users/...\",add_part_names=F,collist=\"\",sample=F,where=\"sku=1 & store=1\",partition=\"2022\") #> [1] \"C:/users/...\" #> [1] \"there is no row, make sure path is correct!\" #> Null data.table (0 rows and 0 cols) your_connection = AzureStor::storage_container(AzureStor::storage_endpoint(your_link, key=your_key), \"your_container\") #> Error in is_url(url): object 'your_link' not found"}]
